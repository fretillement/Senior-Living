table(df$agebucket)
source(houskeeping.R)
cd
help(cd)
??dir
hel(setdir)
help(setdir)
setwd("M:/senior living/code/analysis/"
)
setwd("M:/senior living/"
)
ls()
help(ls)
setwd("code")
setwd("senior-living")
setwd("analysis")
setwd("logit")
source(houskeeping.R)
source(housekeeping.R)
ls
source("housekeeping.R")
rm(list = ls())
source("housekeeping.R")
rm(list = ls())
source('M:/Senior Living/Code/Senior-Living/Analysis/Logit/occlogit.R')
rm(list = ls())
df <- read.csv("M:/Senior living/Data/complete_st.csv")
df <- read.csv("M:/Senior living/Data/psid data/complete_st.csv")
df <- df[(df$age2 < 55), ]
df <- c(1984, 1989, 1994) + seq(1999, 2011, 2)
wmeasured <- c(1984, 1989, 1994) + seq(1999, 2011, 2)
df <- read.csv("M:/Senior living/Data/psid data/complete_st.csv")
wmeasured <- c(1984, 1989, 1994, seq(1999, 2011, 2))
wmeasured
df <- df[(df$age2 < 55), ]
df <- df[(df$year %in% wmeasured), ]
table(df$moved2)
names(df)
table(df$moved3)
table(df$moved)
wmeasured <- c(1984, 1989, 1994, seq(1999, 2011, 2))
df <- df[(df$year %in% wmeasured), ]
df <- fillInUrban(df)
fillInUrban <- function(data) {
# Fill in missing values of the variable urban.rural.code
#
# Args:
#    data: complete PSID dataframe
#
# Returns:
#    data: data with filled in missing values for moved
data <- rename(data, c("urbanruralcode"= "urban.rural.code"))
validyrs <- (data[, 'year'] >= 1984)
urban <- (data[, 'urban.rural.code'] %in% seq(1,5))
data[validyrs & urban, 'urban.rural.code'] <- "Urban"
data[validyrs & !urban, 'urban.rural.code'] <- "Rural"
fill1984 <- function(group) {
if((1984 %in% group$year) & (group[group$year == 1985, 'moved'] %in% c(5, 0, 8, 9))) {
group[group$year == 1984, 'urban.rural.code'] <- group[group$year == 1985, 'urban.rural.code']
}
return(group)
}
data <- ddply(data, 'unique_pid', fill1984, .parallel=TRUE)
return(data)
}
df <- fillInUrban(df)
fill1984 <- function(group) {
if((1984 %in% group$year) & (group[group$year == 1985, 'moved'] %in% c(5, 0, 8, 9))) {
group[group$year == 1984, 'urban.rural.code'] <- group[group$year == 1985, 'urban.rural.code']
}
return(group)
}
test <- df[df$unique_pid == "1000_1", ]
test
"1000_1" %in% df$unique_pid
"1001_1" %in% df$unique_pid
"2001_1" %in% df$unique_pid
test <- df[df$unique_pid == "2001_1", ]
test
fill1984(test)
(1984 %in% group$year) & (group[group$year == 1985, 'moved'] %in% c(5, 0, 8, 9))
(1984 %in% test$year) & (test[test$year == 1985, 'moved'] %in% c(5, 0, 8, 9))
if((1984 %in% test$year) & (test[test$year == 1985, 'moved'] %in% c(5, 0, 8, 9)))
{}
(1984 %in% test$year) & (test[test$year == 1985, 'moved'] %in% c(5, 0, 8, 9))
if((1984 %in% test$year) & (test[test$year == 1985, 'moved'] %in% c(5, 0, 8, 9))){}
bool <- (1984 %in% test$year) & (test[test$year == 1985, 'moved'] %in% c(5, 0, 8, 9))
bool
if(bool)
{}
if((1984 %in% test$year)  & (test[test$year == 1985, 'moved'] ~= 1)) {
print("yes!")
}
if((1984 %in% test$year)  & (test[test$year == 1985, 'moved'] != 1)) {
print("yes!")
}
if((1984 %in% group$year) && (group[group$year == 1985, 'moved'] ~= 1)) {
print("yes!")
}
fillInUrban <- function(data) {
# Fill in missing values of the variable urban.rural.code
#
# Args:
#    data: complete PSID dataframe
#
# Returns:
#    data: data with filled in missing values for moved
data <- rename(data, c("urbanruralcode"= "urban.rural.code"))
validyrs <- (data[, 'year'] >= 1984)
urban <- (data[, 'urban.rural.code'] %in% seq(1,5))
data[validyrs & urban, 'urban.rural.code'] <- "Urban"
data[validyrs & !urban, 'urban.rural.code'] <- "Rural"
fill1984 <- function(group) {
if((1984 %in% group$year) && (group[group$year == 1985, 'moved'] ~= 1)) {
print("yes!")
}
#if((1984 %in% group$year) & (group[group$year == 1985, 'moved'] %in% c(5, 0, 8, 9))) {
#       group[group$year == 1984, 'urban.rural.code'] <- group[group$year == 1985, 'urban.rural.code']
# }
#  return(group)
}
data <- ddply(data, 'unique_pid', fill1984, .parallel=TRUE)
return(data)
}
fillInUrban <- function(data) {
# Fill in missing values of the variable urban.rural.code
#
# Args:
#    data: complete PSID dataframe
#
# Returns:
#    data: data with filled in missing values for moved
data <- rename(data, c("urbanruralcode"= "urban.rural.code"))
validyrs <- (data[, 'year'] >= 1984)
urban <- (data[, 'urban.rural.code'] %in% seq(1,5))
data[validyrs & urban, 'urban.rural.code'] <- "Urban"
data[validyrs & !urban, 'urban.rural.code'] <- "Rural"
fill1984 <- function(group) {
if((1984 %in% group$year) && (group[group$year == 1985, 'moved'] ~= 1)) {
print("yes!")
}
}
#if((1984 %in% group$year) & (group[group$year == 1985, 'moved'] %in% c(5, 0, 8, 9))) {
#       group[group$year == 1984, 'urban.rural.code'] <- group[group$year == 1985, 'urban.rural.code']
# }
#  return(group)
data <- ddply(data, 'unique_pid', fill1984, .parallel=TRUE)
return(data)
}
fillInUrban <- function(data) {
# Fill in missing values of the variable urban.rural.code
#
# Args:
#    data: complete PSID dataframe
#
# Returns:
#    data: data with filled in missing values for moved
data <- rename(data, c("urbanruralcode"= "urban.rural.code"))
validyrs <- (data[, 'year'] >= 1984)
urban <- (data[, 'urban.rural.code'] %in% seq(1,5))
data[validyrs & urban, 'urban.rural.code'] <- "Urban"
data[validyrs & !urban, 'urban.rural.code'] <- "Rural"
fill1984 <- function(group) {
if((1984 %in% group$year) && (group[group$year == 1985, 'moved'] ~= 1)) {
print("yes!")
}
}
data <- ddply(data, 'unique_pid', fill1984, .parallel=TRUE)
return(data)
fillInUrban <- function(data) {
# Fill in missing values of the variable urban.rural.code
#
# Args:
#    data: complete PSID dataframe
#
# Returns:
#    data: data with filled in missing values for moved
data <- rename(data, c("urbanruralcode"= "urban.rural.code"))
validyrs <- (data[, 'year'] >= 1984)
urban <- (data[, 'urban.rural.code'] %in% seq(1,5))
data[validyrs & urban, 'urban.rural.code'] <- "Urban"
data[validyrs & !urban, 'urban.rural.code'] <- "Rural"
fill1984 <- function(group) {
if((1984 %in% group$year) && (group[group$year == 1985, 'moved'] ~= 1)) {
print("yes!")
}
}
data <- ddply(data, 'unique_pid', fill1984, .parallel=TRUE)
return(data)
}
fillInUrban <- function(data) {
# Fill in missing values of the variable urban.rural.code
#
# Args:
#    data: complete PSID dataframe
#
# Returns:
#    data: data with filled in missing values for moved
data <- rename(data, c("urbanruralcode"= "urban.rural.code"))
validyrs <- (data[, 'year'] >= 1984)
urban <- (data[, 'urban.rural.code'] %in% seq(1,5))
data[validyrs & urban, 'urban.rural.code'] <- "Urban"
data[validyrs & !urban, 'urban.rural.code'] <- "Rural"
fill1984 <- function(group) {
if ((1984 %in% group$year) && (group[group$year == 1985, 'moved'] ~= 1)) {
print("yes!")
}
}
data <- ddply(data, 'unique_pid', fill1984, .parallel=TRUE)
return(data)
}
fillInUrban <- function(data) {
# Fill in missing values of the variable urban.rural.code
#
# Args:
#    data: complete PSID dataframe
#
# Returns:
#    data: data with filled in missing values for moved
data <- rename(data, c("urbanruralcode"= "urban.rural.code"))
validyrs <- (data[, 'year'] >= 1984)
urban <- (data[, 'urban.rural.code'] %in% seq(1,5))
data[validyrs & urban, 'urban.rural.code'] <- "Urban"
data[validyrs & !urban, 'urban.rural.code'] <- "Rural"
fill1984 <- function(group) {
if ((1984 %in% group$year) && (group[group$year == 1985, 'moved'] ~= 1)) {
print("yes!")
#if((1984 %in% group$year) & (group[group$year == 1985, 'moved'] %in% c(5, 0, 8, 9))) {
#       group[group$year == 1984, 'urban.rural.code'] <- group[group$year == 1985, 'urban.rural.code']
# }
#  return(group)
}
}
data <- ddply(data, 'unique_pid', fill1984, .parallel=TRUE)
return(data)
}
